services:
  # Layanan untuk database PostgreSQL
  db:
    image: postgres:14-alpine  # Menggunakan image PostgreSQL resmi yang ringan
    container_name: expense-tracker-db
    restart: unless-stopped
    environment:
      # Kredensial ini akan digunakan oleh Go untuk terhubung
      POSTGRES_USER: user_expenses
      POSTGRES_PASSWORD: password_expenses
      POSTGRES_DB: db_expenses
    ports:
      # Memetakan port 5432 di container ke port 5432 di komputer Anda
      - "5432:5432"
    volumes:
      # Volume ini akan menyimpan data database secara permanen
      # bahkan jika container dihapus dan dibuat ulang
      - postgres_data:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  app:
    build: .
    container_name: expense-tracker-app
    ports:
     - "8000:8000"  # Ganti ke 8000 supaya tidak bentrok dengan Jenkins
    depends_on:
      - db
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - ./localhost.pem:/app/localhost.pem
      - ./localhost-key.pem:/app/localhost-key.pem
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  
  # Layanan untuk Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - app 
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Layanan untuk Grafana
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: unless-stopped
    ports:
     - "3001:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        
  # layanan untuk logging
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
     - "3100:3100"
    command: ["-config.file=/etc/loki/local-config.yaml"]
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail:/etc/promtail
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: ["-config.file=/etc/promtail/promtail-config.yml"]
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        
volumes:
  postgres_data:
  grafana_data:
